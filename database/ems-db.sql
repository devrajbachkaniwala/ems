CREATE TABLE Users (
    userId INT,
    username VARCHAR(150) NOT NULL,
    userPhoto BYTEA,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(10) DEFAULT 'user',
    isActive BOOLEAN DEFAULT TRUE,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_USERS PRIMARY KEY (userId),
    CONSTRAINT UK_USERS UNIQUE (email)
);

CREATE TABLE Organizations (
    orgId INT,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    contactNo INT NOT NULL,
    email VARCHAR(255) NOT NULL,
    photo BYTEA NOT NULL,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_ORGANIZATIONS PRIMARY KEY (orgId)
);

CREATE TABLE Events (
    eventId INT,
    orgId INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    city VARCHAR(200) NOT NULL,
    state VARCHAR(200) NOT NULL,
    country VARCHAR(200) NOT NULL,
    venue VARCHAR(255) NOT NULL,
    geoLatLng POINT NOT NULL,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_EVENTS PRIMARY KEY (eventId),
    CONSTRAINT FK_EVENTS_ORGANIZATIONS FOREIGN KEY (orgId) REFERENCES Organizations(orgId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE EventPhotos (
    photoId INT,
    photo BYTEA NOT NULL,
    eventId INT NOT NULL,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_EVENTPHOTOS PRIMARY KEY (photoId),
    CONSTRAINT FK_EVENTPHOTOS_EVENTS FOREIGN KEY (eventId) REFERENCES Events(eventId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE EventTimings (
    timingId INT,
    date DATE NOT NULL,
    startTime TIME NOT NULL,
    endTime TIME NOT NULL,
    eventId INT NOT NULL,
    CONSTRAINT PK_EVENTTIMINGS PRIMARY KEY (timingId),
    CONSTRAINT FK_EVENTTIMINGS_EVENTS FOREIGN KEY (eventId) REFERENCES Events(eventId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Reviews (
    reviewId INT,
    description TEXT NOT NULL,
    star INT NOT NULL,
    eventId INT NOT NULL,
    userId INT NOT NULL,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_REVIEWS PRIMARY KEY (reviewId),
    CONSTRAINT FK_REVIEWS_EVENTS FOREIGN KEY (eventId) REFERENCES Events(eventId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_REVIEWS_USERS FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Bookings (
    bookingId INT,
    eventId INT NOT NULL,
    userId INT NOT NULL,
    createdAt TIMESTAMPTZ DEFAULT NOW(),
    updatedAt TIMESTAMPTZ DEFAULT NOW(),
    CONSTRAINT PK_BOOKINGS PRIMARY KEY (bookingId),
    CONSTRAINT FK_BOOKINGS_USERS FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_BOOKINGS_EVENTS FOREIGN KEY (eventId) REFERENCES Events(eventId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BookingItems (
    itemId INT,
    bookingId INT NOT NULL,
    priceId INT NOT NULL,
    orgId INT NOT NULL,
    qty INT NOT NULL,
    CONSTRAINT PK_BOOKINGITEMS PRIMARY KEY (itemId),
    CONSTRAINT UK_BOOKINGITEMS UNIQUE (bookingId),
    CONSTRAINT FK_BOOKINGITEMS_BOOKINGS FOREIGN KEY (bookingId) REFERENCES Bookings(bookingId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_BOOKINGITEMS_ORGANIZATIONS FOREIGN KEY (orgId) REFERENCES Organizations(orgId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_BOOKINGITEMS_EVENTPRICES FOREIGN KEY (priceId) REFERENCES EventPrices(priceId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE EventPrices (
    priceId INT,
    eventId INT NOT NULL,
    price INT NOT NULL,
    currency VARCHAR(100) NOT NULL,
    maxLimit INT DEFAULT 0,
    sold INT DEFAULT 0,
    CONSTRAINT PK_EVENTPRICES PRIMARY KEY (priceId),
    CONSTRAINT FK_EVENTPRICES_EVENTS FOREIGN KEY (eventId) REFERENCES Events(eventId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE OrganizationTeamMembers (
    orgId INT NOT NULL,
    userId INT NOT NULL,
    CONSTRAINT UK_ORGANINZATIONTEAMMEMBERS UNIQUE (userId),
    CONSTRAINT FK_ORGANINZATIONTEAMMEMBERS_USERS FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ORGANINZATIONTEAMMEMBERS_ORGANIZATIONS FOREIGN KEY (orgId) REFERENCES Organizations(orgId) ON DELETE CASCADE ON UPDATE CASCADE
);